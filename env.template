# 🏆 Football Prediction System v3.0 - Environment Configuration Template
# 复制此文件为 .env 并填写实际值

# =============================================================================
# 🌍 应用配置
# =============================================================================
ENV=development
APP_NAME="Football Prediction System"
APP_VERSION="3.0.0"
DEBUG=true
LOG_LEVEL=info

# API配置
API_HOST=0.0.0.0
API_PORT=8000
API_WORKERS=1

# CORS配置
CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080"]
CORS_CREDENTIALS=true

# =============================================================================
# 🗄️ 数据库配置
# =============================================================================
# PostgreSQL主数据库
DATABASE_URL=postgresql://postgres:password@localhost:5432/football_db
POSTGRES_DB=football_db
POSTGRES_USER=postgres
POSTGRES_PASSWORD=password

# 测试数据库
TEST_DATABASE_URL=postgresql://postgres:test@localhost:5432/football_test

# =============================================================================
# 🚀 缓存配置
# =============================================================================
# Redis缓存
REDIS_URL=redis://localhost:6379/0
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=

# 缓存TTL设置 (秒)
CACHE_TTL_SHORT=300      # 5分钟
CACHE_TTL_MEDIUM=3600    # 1小时  
CACHE_TTL_LONG=86400     # 24小时

# =============================================================================
# 🔐 安全配置  
# =============================================================================
# JWT配置
SECRET_KEY=your-super-secret-key-change-in-production
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# API密钥
FOOTBALL_DATA_API_KEY=your_football_data_api_key_here
OPENAI_API_KEY=your_openai_api_key_here

# =============================================================================
# 📊 监控配置
# =============================================================================
# OpenTelemetry
OTEL_SERVICE_NAME=football-predict-api
OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317

# Prometheus
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9090

# =============================================================================
# 🤖 机器学习配置
# =============================================================================
# 模型配置
MODEL_PATH=./models/artifacts
MODEL_VERSION=latest
MODEL_RETRAIN_INTERVAL_HOURS=24

# 特征工程
FEATURE_WINDOW_DAYS=90
MIN_MATCHES_FOR_PREDICTION=5

# =============================================================================
# 📦 数据流配置
# =============================================================================
# Prefect (如果使用)
PREFECT_API_URL=http://localhost:4200/api
PREFECT_LOGGING_LEVEL=INFO

# 数据源配置
DATA_UPDATE_INTERVAL_MINUTES=60
MAX_CONCURRENT_REQUESTS=10

# =============================================================================
# 🐳 Docker配置
# =============================================================================
COMPOSE_PROJECT_NAME=football-predict
DOCKER_REGISTRY=your-registry.com

# =============================================================================
# 🧪 测试配置
# =============================================================================
TESTING=false
PYTEST_TIMEOUT=300
COVERAGE_THRESHOLD=80

# =============================================================================
# 📝 示例配置 (开发环境)
# =============================================================================
# 以下是开发环境的示例值，生产环境请修改为实际值

# 开发数据库
# DATABASE_URL=postgresql://postgres:password@localhost:5432/football_dev

# 开发Redis  
# REDIS_URL=redis://localhost:6379/1

# 开发密钥 (请在生产环境中更改)
# SECRET_KEY=dev-secret-key-not-for-production

# =============================================================================
# 📋 配置说明
# =============================================================================
# 1. 复制此文件为 .env: cp env.template .env
# 2. 根据部署环境修改相应的值
# 3. 生产环境中务必更改所有密钥和密码
# 4. 确保 .env 文件不被提交到版本控制系统
# 5. 使用强密码和随机密钥

# 🔗 相关文档:
# - 数据库设置: docs/DEPLOYMENT.md#database
# - API密钥获取: docs/DEVELOPMENT.md#api-keys  
# - 安全配置: docs/DEPLOYMENT.md#security
# - Docker部署: docs/DEPLOYMENT.md#docker 