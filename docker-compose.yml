version: '3.8'

services:
  # 主应用 (使用与CI环境一致的配置)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://test_user:test_pass@postgres:5432/test_football_db
      - REDIS_URL=redis://redis:6379/1
      - FOOTBALL_DATA_API_KEY=test_api_key
      - PYTHONPATH=/workspace/src
    volumes:
      - .:/workspace
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    # 覆盖CI默认命令，用于开发服务器
    command: .venv/bin/uvicorn src.football_predict_system.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - football_net

  # PostgreSQL 数据库 (与CI环境一致)
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: test_football_db
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d test_football_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - football_net

  # Redis 缓存 (与CI环境一致)
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - football_net

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  football_net:
    driver: bridge
