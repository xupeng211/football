[tool.poetry]
name = "football-predict-system"
version = "0.1.0"
description = "Football match outcome prediction system"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{include = "football_predict_system", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.11"
fastapi = ">=0.110.3"
uvicorn = {version = ">=0.23.0", extras = ["standard"]}
pydantic = ">=2.0.0"
pandas = ">=2.0.0"
pydantic-settings = ">=2.0.0"
numpy = ">=1.24.0"
scikit-learn = ">=1.5.0"
xgboost = ">=1.7.0"
psycopg2-binary = ">=2.9.0"
sqlalchemy = ">=2.0.0"
prefect = ">=2.20.17,<3.0.0"
structlog = ">=23.0.0"
python-dotenv = ">=1.0.0"
requests = ">=2.32.4"
urllib3 = ">=2.2.2"
redis = ">=5.0.0"
types-redis = ">=4.6.0"
prometheus-fastapi-instrumentator = ">=7.0.0"
aiculture-kit = {git = "https://github.com/xupeng211/AICultureKit.git", rev = "9c776783542e5c578f692f6a51b29d285700d094"}

[tool.poetry.group.dev.dependencies]
pytest = ">=7.0.0"
pytest-cov = ">=4.0.0"
pytest-asyncio = ">=0.21.0"
ruff = ">=0.4.0"
mypy = ">=1.5.0"
bandit = ">=1.7.0"
pre-commit = ">=3.0.0"
types-setuptools = "*"
setuptools = ">=65.5.1"
diff-cover = ">=7.0.0"
pytest-mock = ">=3.10.0"
pytest-xdist = ">=3.5.0"
psutil = "~=6.0.0"
mutmut = ">=2.4.0"
hypothesis = ">=6.100.0"
types-PyYAML = "*"
types-requests = "*"

defusedxml = ">=0.7.1"
types-defusedxml = "~=0.7.0"
types-psycopg2 = ">=2.9.21.12"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
norecursedirs = ["src/aiculture-kit", "external", "vendor"]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"
addopts = [
    "-n", "auto",
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
    "-m", "not slow"
]
markers = [
    "unit: 单元测试",
    "integration: 集成测试",
    "regression: 回归测试",
    "e2e: 端到端测试",
    "slow: 慢速测试",
    "fast: 快速测试",
    "api: API测试",
    "model: 模型测试",
]

[tool.coverage.run]
source = ["."]
omit = ["tests/*", ".venv/*", "*/site-packages/*"]

[tool.coverage.report]
exclude_lines = ["pragma: no cover"]

[tool.ruff]
target-version = "py38"
line-length = 88
exclude = ["src/aiculture-kit","external","vendor"]

[tool.ruff.lint]
select = ["E", "F", "W", "I", "B", "UP", "RUF"]
ignore = ["E501", "B008", "B904"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = "tests/|.venv/|scripts/|src/aiculture-kit|external|vendor"

[[tool.mypy.overrides]]
module = [
    "prefect.*",
    "pandas.*",
    "sklearn.*",
    "xgboost.*",
    "structlog.*",
    "httpx.*",
    "uvicorn.*",
    "fastapi.*",
    "pydantic.*"
]
ignore_errors = true
ignore_missing_imports = true

[tool.mutmut]
paths_to_mutate = "apps/,data_pipeline/,models/,trainer/"
runner = "pytest"
tests_dir = "tests/"


[tool.bandit]
exclude_dirs = ["tests", ".venv"]
skips = ["B101", "B601", "B404", "B603", "B607"]

[tool.ruff.lint.per-file-ignores]
    "tests/**.py" = ["F821"]
    "tests/unit/test_runs_logger_complete.py" = ["E501"]
"scripts/automated_test_report.py" = ["E501"]
"scripts/coverage-monitor.py" = ["E501"]
