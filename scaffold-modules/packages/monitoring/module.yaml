# 📊 监控分析模块配置
# Monitoring Module - 全方位系统监控和分析

name: "monitoring"
display_name: "📊 监控分析模块"
version: "2.0.0"
description: "全方位系统监控，包含健康检查、性能监控、日志分析等"

# 模块类型
type: "feature"
required: false

# 依赖关系
dependencies:
  - "core"
  - "testing" # 监控模块依赖测试模块进行质量监控

# 冲突模块
conflicts: []

# 模块文件列表
files:
  # 监控脚本
  - src: "scripts/health-check.py"
    dest: "scripts/health-check.py"
    type: "script"
    description: "系统健康检查工具"

  - src: "scripts/ci-dashboard.py"
    dest: "scripts/ci-dashboard.py"
    type: "script"
    description: "CI仪表板生成器"

  - src: "scripts/performance-monitor.py"
    dest: "scripts/performance-monitor.py"
    type: "script"
    description: "性能监控工具"

  - src: "scripts/log-analyzer.py"
    dest: "scripts/log-analyzer.py"
    type: "script"
    description: "日志分析工具"

  # 监控配置
  - src: "monitoring/prometheus.yml"
    dest: "monitoring/prometheus.yml"
    type: "config"
    description: "Prometheus监控配置"

  - src: "monitoring/alerts.yml"
    dest: "monitoring/alerts.yml"
    type: "config"
    description: "告警规则配置"

  # Grafana仪表板
  - src: "monitoring/grafana-dashboards/system-overview.json"
    dest: "monitoring/grafana-dashboards/system-overview.json"
    type: "config"
    description: "系统概览仪表板"

  - src: "monitoring/grafana-dashboards/ci-metrics.json"
    dest: "monitoring/grafana-dashboards/ci-metrics.json"
    type: "config"
    description: "CI指标仪表板"

  # GitHub Actions工作流
  - src: ".github/workflows/notify-on-failure.yml"
    dest: ".github/workflows/notify-on-failure.yml"
    type: "workflow"
    description: "失败通知工作流"

  # 配置文件
  - src: "configs/logging-config.yaml"
    dest: "configs/logging-config.yaml"
    type: "config"
    description: "日志配置文件"

  - src: "configs/metrics-config.yaml"
    dest: "configs/metrics-config.yaml"
    type: "config"
    description: "指标配置文件"

# 安装后执行的命令
post_install:
  commands:
    - "chmod +x scripts/health-check.py scripts/ci-dashboard.py scripts/performance-monitor.py scripts/log-analyzer.py"
    - "mkdir -p monitoring/grafana-dashboards logs reports"
    - "pip install prometheus-client grafana-api --quiet"

  messages:
    - "🎉 监控分析模块安装完成！"
    - "📊 系统监控和分析工具已就绪"
    - "🔍 运行 python scripts/health-check.py 进行健康检查"
    - "📈 使用 python scripts/ci-dashboard.py 生成仪表板"
    - "⚡ 查看 monitoring/ 目录了解监控配置"

# 系统要求
requirements:
  python: ">=3.11"
  pip_packages:
    - "prometheus-client>=0.17.0"
    - "grafana-api>=1.0.0"
    - "psutil>=5.9.0"
    - "requests>=2.28.0"

# 功能特性
features:
  - "system_monitoring"
  - "performance_analysis"
  - "health_checks"
  - "log_analysis"
  - "alerting_system"
  - "dashboard_generation"

# 估算指标
metrics:
  files_count: 11
  install_time_seconds: 60
  setup_complexity: "medium"
  maintenance_effort: "low"

# 使用建议
usage_tips:
  - "定期运行健康检查确保系统正常"
  - "监控关键性能指标和资源使用"
  - "配置告警规则及时发现问题"
  - "使用仪表板可视化系统状态"

# 版本历史
changelog:
  "2.0.0":
    - "增强监控功能"
    - "Grafana仪表板集成"
    - "智能告警系统"
  "1.0.0":
    - "基础监控功能"
