---
name: CI
on:
  push:
    branches: [main, dev, feat/ci-foundation]
  pull_request:
    branches: [main, dev]

permissions:
  contents: read

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1
  PIP_DEFAULT_TIMEOUT: 60
  UV_SYSTEM_PYTHON: 1

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.11.9
        uses: actions/setup-python@v5
        with:
          python-version: "3.11.9"

      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends build-essential

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip uv
          pip install -r requirements.txt
          pip install -e .
          pip install pre-commit ruff mypy pytest pytest-cov bandit

      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Run code formatting check
        run: |
          echo "::group::Code Formatting"
          ruff format --check .
          echo "::endgroup::"

      - name: Run linting
        run: |
          echo "::group::Linting"
          ruff check .
          echo "::endgroup::"

      - name: Run type checking
        run: |
          echo "::group::Type Checking"
          mypy .
          echo "::endgroup::"

      - name: Run security scan
        run: |
          echo "::group::Security Scan"
          bandit -r . --configfile pyproject.toml
          echo "::endgroup::"

      - name: Run gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          config-path: .gitleaks.toml

      - name: Run tests
        run: |
          echo "::group::Tests"
          pytest -v --cov-report=xml
          echo "::endgroup::"
