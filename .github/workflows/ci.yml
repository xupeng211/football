---
# Force CI rebuild
name: CI
on:
  push:
    branches:
      - main
      - dev
      - 'feat/**'
      - 'fix/**'
  pull_request:
    branches:
      - main
      - dev

permissions:
  contents: read

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1
  PIP_DEFAULT_TIMEOUT: 60
  UV_SYSTEM_PYTHON: 1

jobs:
  ci:
    name: "CI"
    runs-on: ubuntu-22.04
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: football_test
          POSTGRES_USER: football
          POSTGRES_PASSWORD: football
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Required for diff-cover

      - name: Set up Python 3.11.9
        uses: actions/setup-python@v5
        with:
          python-version: "3.11.9"

      - name: Set up uv cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml') }}

      - name: Install dependencies from lock file
        run: |
          python -m pip install -U pip uv
          if [ ! -f "requirements.lock" ]; then
            echo "⚠️ Lock file not found, generating..."
            uv pip compile pyproject.toml --all-extras -o requirements.lock
          fi
                    uv pip sync --all-extras requirements.lock --python-version 3.11
          uv pip install -e .

      - name: Install psql client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Initialize DB Schema
        env:
          PGPASSWORD: football
        run: psql -h localhost -U football -d football_test -f sql/schema.sql

      - name: Run CI checks
        env:
          DATABASE_URL: postgresql://football:football@localhost:5432/football_test
          COV_MIN: ${{ vars.COV_MIN || '70' }}
          DIFF_COV_MIN: ${{ vars.DIFF_COV_MIN || '75' }}
          BASE_REF: ${{ github.base_ref || 'main' }}
        run: make ci

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts
          path: |
            htmlcov/
            coverage.xml
            reports/
          if-no-files-found: ignore
