---
name: Guardrail Daily Check
on:
  schedule:
    - cron: "15 1 * * *"   # 每天 01:15 UTC 运行
  workflow_dispatch:

permissions:
  contents: read

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Guardrail checks
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: xupeng211
          REPO: football
        run: |
          set -euo pipefail

          echo "[SSOT] check…"
          test -s docs/ARCHITECTURE.md
          test -s docs/TASKS.md
          grep -qE '^```mermaid' docs/ARCHITECTURE.md

          echo "[Context Pack] check…"
          make -s context.pack
          test -s context/_pack.md

          echo "[Dev Log] check…"
          test -s docs/dev_log.md
          grep -E 'T-00[1-9]|P0|覆盖率|make ci|/health|/metrics' -i docs/dev_log.md

          echo "[Workflows] check…"
          ls .github/workflows/ci.yml
          grep -qi 'name:\s*CodeQL' .github/workflows/*
          grep -qi 'name:\s*Gitleaks' .github/workflows/*

          echo "[Branch Protection] check…"
          verify='
          .required_status_checks.strict and
          (((.required_status_checks.checks // []) | map(.context) | sort) == ["CI","CodeQL","Gitleaks"]) and
          (.required_pull_request_reviews.required_approving_review_count == 1) and
          .required_pull_request_reviews.dismiss_stale_reviews and
          .required_linear_history.enabled and
          .enforce_admins.enabled and
          (.allow_force_pushes.enabled == false) and
          (.allow_deletions.enabled == false)
          '
          for BR in main dev; do
            code=$(curl -sS -w "%{http_code}" \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github+json" \
              "https://api.github.com/repos/${OWNER}/${REPO}/branches/${BR}/protection" \
              -o resp.json || true)
            if [ "$code" -ne 200 ]; then
              echo "Branch ${BR} protection fetch failed (HTTP $code)"; cat resp.json; exit 1
            fi
            jq -e "$verify" resp.json >/dev/null
            echo "✓ ${BR} protection OK"
          done

          echo "[Secrets not tracked] check…"
          ! git ls-files | grep -q '^\.\?env$'
          ! git ls-files | grep -q '^infra/host\.env$'

          echo "✅ Guardrail daily check passed."
