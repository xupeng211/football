# ---- Builder Stage: Install dependencies ----
FROM python:3.11 as builder

WORKDIR /app

# Install uv, our package installer
RUN pip install uv

# Copy dependency configuration
COPY pyproject.toml requirements.lock* ./

# Create a virtual environment and install dependencies from the lock file
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"
# Use the lock file for deterministic installs. Fallback to pyproject.toml if it doesn't exist.
RUN if [ -f "requirements.lock" ]; then uv pip sync requirements.lock; else uv pip install --no-dev; fi

# ---- Final Stage: Create the production image ----
FROM python:3.11

WORKDIR /app

# Create a non-root user for security
RUN groupadd -r appgroup && useradd -r -g appgroup -s /sbin/nologin -d /app appuser

# Copy the virtual environment from the builder stage
COPY --from=builder /opt/venv /opt/venv

# Copy only the necessary application code required for the API to run
COPY apps/ ./apps/
COPY models/ ./models/
COPY data_pipeline/ ./data_pipeline/
COPY prompts/ ./prompts/

# Set ownership for the app directory
RUN chown -R appuser:appgroup /app /opt/venv

# Switch to the non-root user
USER appuser

# Set environment variables to use the virtual environment
ENV PATH="/opt/venv/bin:$PATH"
ENV PYTHONPATH=/app

# Expose the application port
EXPOSE 8000

# Add a healthcheck to ensure the API is running
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/livez || exit 1

# The command to run the application
CMD ["uvicorn", "apps.api.main:app", "--host", "0.0.0.0", "--port", "8000"]
